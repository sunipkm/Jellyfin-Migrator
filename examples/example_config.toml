# Example configuration file for Jellyfin with path mappings and remappings
# This file is used to configure the Jellyfin Migrator tool.

# General configuration
windows_ffmpeg_path = "C:/Program Files/Jellyfin/Server/ffmpeg.exe" # Path to ffmpeg on Windows
linux_ffmpeg_path = "/usr/lib/jellyfin-ffmpeg/ffmpeg" # Path to ffmpeg on Linux
# The script must read all the file creation and modification dates *as seen by jellyfin*. 
# In that case and if you're sure that this list is 
# 100% correct, *and only then* you can set "log_no_warnings" to True. 
# Otherwise your logs will be flooded with warnings that 
# it couldn't find an entry to modify the paths (which 
# in that case would be fine because no modifications are needed).
log_no_warnings = false
# Path to Jellyfin data directories on Windows
windows_root_path = "C:/ProgramData/Jellyfin"
# Target path on Linux where Jellyfin data will be migrated
linux_root_path = "/path/to/jellyfin/Jellyfin"

# These paths will be processed in the order they're listed here.
# This can be very important! F.ex. if specific subfolders go to a different
# place than stuff in the root dir of a given path, the subfolders must be
# processed first. Otherwise, they'll be moved to the same place as the other
# stuff in the root folder.
# Note: all the strings below will be converted to Path objects, so it doesn't
# matter whether you write / or \\ or include a trailing / . After the path
# replacement it will be converted back to a string with slashes as specified
# by target_path_slash.
# Note2: The AppDataPath and MetadataPath entries are only there to make sure
# the script recognizes them as actual paths. This is necessary to adjust
# the (back)slashes as specified. This can only be done on "known" paths
# because (back)slashes occur in other strings, too, where they must not be
# changed.
[path_map]
"D:/Music" = "/path/to/Music"
"D:/Movies" = "/path/to/Movies"
"D:/TV Shows" = "/path/to/TV Shows"

# This additional replacement dict is required to convert from the paths docker
# shows to jellyfin back to the actual file system paths to figure out where
# the files shall be copied. If relative paths are provided, the replacements
# are done relative to target_root.
#
# Even if you're not using docker or not using path mapping with docker,
# you probably do need to add some entries for accessing the media files
# and appdata/metadata files, especially if you are running the script on
# a different computer. This is because the script must read all the
# file creation and modification dates *as seen by jellyfin*.
# In that case and if you're sure that this list is 100% correct,
# *and only then* you can set "log_no_warnings" to True. Otherwise your logs
# will be flooded with warnings that it couldn't find an entry to modify the
# paths (which in that case would be fine because no modifications are needed).
[path_remap]
"/path/to/Music" = "Y:/Music"
"/path/to/Movies" = "Y:/Movies"
"/path/to/TV Shows" = "Z:/TV Shows"